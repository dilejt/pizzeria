@import "~bootstrap/scss/bootstrap";

$redFont: #c32b0e;
$redBg: #da4d4a;
$greenBg: #41912b;
$numberOfOptions: 4;

.container{
    margin-top: 7rem!important;
    .pizza{
        position: absolute;
        right: -33%;
        max-width: 50%;
        @include media-breakpoint-down(md) {
            display: none;
        }
    }
    .ingredients{
        position: absolute;
        user-select: none;
        top: 25%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
    #buyButton:focus {
        background-color: $greenBg !important;
    }
    .device {
        h1{
            @include media-breakpoint-down(xs){
                font-size: calc(8px + 5vw);
            }
        }
        .size{
            font-weight: 700;
            top: 50%;
            position: absolute;
            text-align: center;
            @for $i from 1 through ($numberOfOptions + 1) {
                &:nth-child(4n + #{$i}) {
                    left: #{($i * 100%/$numberOfOptions) - 100%/($numberOfOptions/1.66)};
                }
            }
            @include media-breakpoint-down(xs){
                top: 43%;
            }
        }
        .range {
            position: relative;
            height: 50px;
            user-select: none;
            &::before {
                content: "";
                position: absolute;
                height: 3px;
                width: calc(100% * (#{$numberOfOptions - 1} / #{$numberOfOptions}));
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                background: #000;
            }
            input, label {
                flex: 1;
                user-select: none;
                cursor: pointer;
            }
            label {
                display: inline-block;
                position: relative;
                height: 100%;
                user-select: none;
                &::before {
                    content: attr(price);
                    position: absolute;
                    left: 50%;
                    padding-top: 10px;
                    transform: translate(-50%, 45px);
                    font-size: 22px;
                    letter-spacing: 0.4px;
                    font-weight: 900;
                    white-space: nowrap;
                    opacity: 0.85;
                    transition: all 0.15s ease-in-out;
                    @include media-breakpoint-down(xs){
                        font-size: calc(2px + 4vw);
                    }
                }
                &::after {
                    content: " ";
                    position: absolute;
                    left: 50%;
                    top: 50%;
                    transform: translate(-50%, -50%);
                    width: 30px;
                    height: 30px;
                    border: 3px solid #000;
                    background: #fff;
                    border-radius: 50%;
                    pointer-events: none;
                    user-select: none;
                    z-index: 1;
                    cursor: pointer;
                    transition: all 0.15s ease-in-out;
                }
                &:hover::after {
                    transform: translate(-50%, -50%) scale(1.25);
                }
            }
            input {
                display: none;
                &:checked {
                    + label::before {
                        color: $redFont;
                        transform-origin: 77% -15%;
                        transform: scale(2.3);
                        opacity: 1;
                    }
                    + label::after {
                        border-width: 4px;
                        transform: translate(-50%, -50%) scale(0.75);
                    }
                    ~ .point {
                        opacity: 1;
                    }
                    @for $i from 1 through $numberOfOptions {
                        &:nth-child(#{$i * 2 - 1}) ~ .point {
                            left: #{($i * 100%/$numberOfOptions) - 100%/(2*$numberOfOptions)};
                        }
                    }
                }
            }
            .point {
                display: block;
                position: absolute;
                top: 50%;
                width: 12px;
                height: 12px;
                background: $redBg;
                border-radius: 50%;
                transition: all 0.15s ease-in-out;
                transform: translate(-50%, -50%);
                border: 2px solid #fff;
                opacity: 0;
                z-index: 2;
            }
        }
        &:valid {
            .debtAmountSlider {
                input {
                    + label::before {
                        transform: translate(-50%, 45px) scale(0.9);
                        transition: all 0.15s linear;
                    }
                    &:checked + label::before {
                        transform: translate(-50%, 45px) scale(1.1);
                        transition: all 0.15s linear;
                    }
                }
            }
        }
    }
    .extra{
        & label {
            display: block;
            padding: 20px 10px;
            text-align: center;
            transition: all 0.15s ease-in-out;
            background: $redBg;
            border-radius: 10px;
            cursor: pointer;
            & img{
                max-height: 100px;
                min-width: 60px;
                user-select:none;
            }
            & h3{
                user-select:none;
            }
        }
        & input {
            display: none;
            &:checked {
                ~ label{
                    box-shadow: inset 0 0 0 4px $greenBg, 0 15px 15px -10px rgba(darken($greenBg, 30%), .4);
                }
            }
            &{
                ~ label{
                    box-shadow: inset 0 0 0 0px $greenBg, 0 10px 15px -20px rgba($greenBg, 0);
                }
            }
        }
    }
    h2{
        @include media-breakpoint-down(xs){
            font-size: calc(8px + 5vw);
        }
    }
}

